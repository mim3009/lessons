function dragLine(lineToDrag, event){
	var startX = event.clientX;
	var startY = event.clientY;
	var origX = lineToDrag.offsetLeft;
	var origY = lineToDrag.offsetTop;
	var deltaX = startX - origX;
	var deltaY = startY - origY;
	var x1 = lineToDrag.getAttribute("x1");
	var y1 = lineToDrag.getAttribute("y1");
	var x2 = lineToDrag.getAttribute("x2");
	var y2 = lineToDrag.getAttribute("y2");

	var svg = document.getElementsByTagName("svg");
	var offset_SVG = svg[0].getBoundingClientRect();
	var x = event.clientX - deltaX;
	var y = event.clientY - deltaY;

	var tr = document.getElementById("linesTable").getElementsByTagName('tr');
	var findX1 = null;
	var findY1 = null;
	var findX2 = null;
	var findY2 = null;
	for(var i = 0; i < tr.length; i++){
		var td = tr[i].getElementsByTagName('td');
		if(Number(td[0].innerHTML.replace(/\D+/g,""))-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x1"))) && Number(td[1].innerHTML.replace(/\D+/g,""))-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y1"))) && Number(td[2].innerHTML.replace(/\D+/g,""))-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x2"))) && Number(td[3].innerHTML.replace(/\D+/g,""))-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y2")))){
			findX1 = td[0];
			findY1 = td[1];
			findX2 = td[2];
			findY2 = td[3];
			break;
		}
	}

	var tr2 = document.getElementById("pointsTable").getElementsByTagName('tr');
	var findP1X = null;
	var findP1Y = null;
	var findP2X = null;
	var findP2Y = null;
	for(var i = 0; i < tr2.length; i++){
		var td = tr2[i].getElementsByTagName('td');
		if(Number(td[0].innerHTML.replace(/\D+/g,""))-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x1"))) && Number(td[1].innerHTML.replace(/\D+/g,""))-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y1")))){
			findP1X = td[0];
			findP1Y = td[1];
		}
		else if(Number(td[0].innerHTML.replace(/\D+/g,""))-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x2"))) && Number(td[1].innerHTML.replace(/\D+/g,""))-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y2")))){
			findP2X = td[0];
			findP2Y = td[1];
		}
	}

	var points = document.getElementsByClassName("movedElement");
	var findedPoints = new Array();
	var j = 0;
	for(var i = 0; i < points.length; i++){
		if(Number(points[i].style.left.replace(/\D+/g,""))+(Number(points[i].style.width.replace(/\D+/g,""))/2)-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x1"))) && Number(points[i].style.top.replace(/\D+/g,""))+(Number(points[i].style.height.replace(/\D+/g,""))/2)-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y1")))){
			findedPoints[j] = points[i];
			j++;
		}
		else if(Number(points[i].style.left.replace(/\D+/g,""))+(Number(points[i].style.width.replace(/\D+/g,""))/2)-offset_SVG.left == parseInt(Number(lineToDrag.getAttribute("x2"))) && Number(points[i].style.top.replace(/\D+/g,""))+(Number(points[i].style.height.replace(/\D+/g,""))/2)-offset_SVG.top == parseInt(Number(lineToDrag.getAttribute("y2")))){
			findedPoints[j] = points[i];
			j++;
		}
	}

	var findedAllLines = new Array();
	var lines = document.getElementsByTagName("line");
	var k = 0;
	for(var i = 0; i < lines.length; i++){
		if(lines[i].getAttribute("x1") == lineToDrag.getAttribute("x1") && lines[i].getAttribute("y1") == lineToDrag.getAttribute("y1") && lines[i].getAttribute("x2") == lineToDrag.getAttribute("x2") && lines[i].getAttribute("y2") == lineToDrag.getAttribute("y2")) continue;
		if((lines[i].getAttribute("x1") == lineToDrag.getAttribute("x1") && lines[i].getAttribute("y1") == lineToDrag.getAttribute("y1")) || ((lines[i].getAttribute("x1") == lineToDrag.getAttribute("x2") && lines[i].getAttribute("y1") == lineToDrag.getAttribute("y2")))){
			findedAllLines[k] = lines[i];
			findedAllLines[k].setAttribute("ch", "1");
			k++;
		}
		if((lines[i].getAttribute("x2") == lineToDrag.getAttribute("x2") && lines[i].getAttribute("y2") == lineToDrag.getAttribute("y2")) || (lines[i].getAttribute("x2") == lineToDrag.getAttribute("x1") && lines[i].getAttribute("y2") == lineToDrag.getAttribute("y1"))){
			findedAllLines[k] = lines[i];
			findedAllLines[k].setAttribute("ch", "2");
			k++;
		}
	}
	//console.log(findedAllLines);
	
	var l = 0;
	var findTR = new Array();
	for(var i = 0; i < findedAllLines.length; i++){
		var table = document.getElementById("linesTable");
		var tr = document.getElementById("linesTable").getElementsByTagName('tr');
		for(var j = 0; j < tr.length; j++){
			var td = tr[j].getElementsByTagName('td');
			if(parseInt(Number(findedAllLines[i].getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("x2"))+offset_SVG.left) == Number(td[2].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y2"))+offset_SVG.top) == Number(td[3].innerHTML.replace(/\D+/g,""))){
				findTR[l] = tr[j];
				l++;
			}
		}
	}

	if(document.addEventListener){
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}
	
	if(event.stopPropagation) event.stopPropagation();
	else event.cancelBubble = true;

	if(event.preventDefault) event.preventDefault();
	else event.returnValue = false;

	function moveLine(lineToDrag,e){
		var is_exists_white_line = 0;
		for(var i = 0; i < findedAllLines.length; i++){
			if(findedAllLines[i].style.stroke == "white"){
				is_exists_white_line = 1;
			}
		}
		if(is_exists_white_line == 0){
			var x11 = Number(lineToDrag.getAttribute("x1"));
			var y11 = Number(lineToDrag.getAttribute("y1"));
			var x22 = Number(lineToDrag.getAttribute("x2"));
			var y22 = Number(lineToDrag.getAttribute("y2"));

			lineToDrag.setAttribute("x1", Number(x1) + Number(e.clientX - deltaX));
			lineToDrag.setAttribute("y1", Number(y1) + Number(e.clientY - deltaY));
			lineToDrag.setAttribute("x2", Number(x2) + Number(e.clientX - deltaX));
			lineToDrag.setAttribute("y2", Number(y2) + Number(e.clientY - deltaY));

			findX1.innerHTML = Number(x1) + Number(e.clientX - deltaX) + offset_SVG.left;
			findY1.innerHTML = Number(y1) + Number(e.clientY - deltaY) + offset_SVG.top;
			findX2.innerHTML = Number(x2) + Number(e.clientX - deltaX) + offset_SVG.left;
			findY2.innerHTML = Number(y2) + Number(e.clientY - deltaY) + offset_SVG.top;

			findP1X.innerHTML = Number(x1) + Number(e.clientX - deltaX) + offset_SVG.left + "px";
			findP1Y.innerHTML = Number(y1) + Number(e.clientY - deltaY) + offset_SVG.top + "px";
			findP2X.innerHTML = Number(x2) + Number(e.clientX - deltaX) + offset_SVG.left + "px";
			findP2Y.innerHTML = Number(y2) + Number(e.clientY - deltaY) + offset_SVG.top + "px";

			findedPoints[0].style.left = Number(x1) + Number(e.clientX - deltaX) + offset_SVG.left - (Number(findedPoints[0].style.width.replace(/\D+/g,""))/2) + "px";
			findedPoints[0].style.top = Number(y1) + Number(e.clientY - deltaY) + offset_SVG.top - (Number(findedPoints[0].style.height.replace(/\D+/g,""))/2) + "px";
			findedPoints[1].style.left = Number(x2) + Number(e.clientX - deltaX) + offset_SVG.left - (Number(findedPoints[1].style.width.replace(/\D+/g,""))/2) + "px";
			findedPoints[1].style.top = Number(y2) + Number(e.clientY - deltaY) + offset_SVG.top - (Number(findedPoints[1].style.height.replace(/\D+/g,""))/2) + "px";

			for(var i = 0; i < findedAllLines.length; i++){
				if(findedAllLines[i].style.stroke == "red"){
					if(findedAllLines[i].getAttribute("ch") == "1"){
						var td1 = null;
						for(var u = 0; u < findTR.length; u++){
							var td = findTR[u].getElementsByTagName('td');
							if((parseInt(Number(findedAllLines[i].getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,""))) || (parseInt(Number(findedAllLines[i].getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,"")))){
								td1 = td;
								break;
							}
						}
						if(Number(findedAllLines[i].getAttribute("x1")) == x11){
							findedAllLines[i].setAttribute("x1", parseInt(Number(lineToDrag.getAttribute("x1"))));
							findedAllLines[i].setAttribute("y1", parseInt(Number(lineToDrag.getAttribute("y1"))));
							td1[0].innerHTML = parseInt(Number(lineToDrag.getAttribute("x1"))) + offset_SVG.left;
							td1[1].innerHTML = parseInt(Number(lineToDrag.getAttribute("y1"))) + offset_SVG.top;
						}
						else{
							findedAllLines[i].setAttribute("x1", parseInt(Number(lineToDrag.getAttribute("x2"))));
							findedAllLines[i].setAttribute("y1", parseInt(Number(lineToDrag.getAttribute("y2"))));
							td1[0].innerHTML = parseInt(Number(lineToDrag.getAttribute("x2"))) + offset_SVG.left;
							td1[1].innerHTML = parseInt(Number(lineToDrag.getAttribute("y2"))) + offset_SVG.top;
						}
						
					}
					else if(findedAllLines[i].getAttribute("ch") == "2"){
						var td1 = null;
						for(var u = 0; u < findTR.length; u++){
							var td = findTR[u].getElementsByTagName('td');
							if((parseInt(Number(findedAllLines[i].getAttribute("x2"))+offset_SVG.left) == Number(td[2].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y2"))+offset_SVG.top) == Number(td[3].innerHTML.replace(/\D+/g,""))) || (parseInt(Number(findedAllLines[i].getAttribute("x2"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(findedAllLines[i].getAttribute("y2"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,"")))){
								td1 = td;
								break;
							}
						}
						if(Number(findedAllLines[i].getAttribute("x2")) == x22){
							findedAllLines[i].setAttribute("x2", parseInt(Number(lineToDrag.getAttribute("x2"))));
							findedAllLines[i].setAttribute("y2", parseInt(Number(lineToDrag.getAttribute("y2"))));
							td1[2].innerHTML = parseInt(Number(lineToDrag.getAttribute("x2"))) + offset_SVG.left;
							td1[3].innerHTML = parseInt(Number(lineToDrag.getAttribute("y2"))) + offset_SVG.top;
						}
						else{
							findedAllLines[i].setAttribute("x2", parseInt(Number(lineToDrag.getAttribute("x1"))));
							findedAllLines[i].setAttribute("y2", parseInt(Number(lineToDrag.getAttribute("y1"))));
							td1[2].innerHTML = parseInt(Number(lineToDrag.getAttribute("x1"))) + offset_SVG.left;
							td1[3].innerHTML = parseInt(Number(lineToDrag.getAttribute("y1"))) + offset_SVG.top;
						}
					}
				}
				else{
					
				}
			}
		}else{}
	}

	/*function lineWhite(finL, e, svg, x11, y11, x22, y22){
		var fALx1 = Number(finL.getAttribute("x1"));
		var fALy1 = Number(finL.getAttribute("y1"));
		var fALx2 = Number(finL.getAttribute("x2"));
		var fALy2 = Number(finL.getAttribute("y2"));
		var length_of_finL = finL.getAttribute("lengthLine");

		if(finL.getAttribute("ch") == "1"){
			var td1 = null;
			for(var u = 0; u < findTR.length; u++){
				var td = findTR[u].getElementsByTagName('td');
				if((parseInt(Number(finL.getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(finL.getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,""))) || (parseInt(Number(finL.getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(finL.getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,"")))){
					td1 = td;
					break;
				}
			}
			if(fALx1 == x11){
				finL.setAttribute("x1", parseInt(Number(lineToDrag.getAttribute("x1"))));
				finL.setAttribute("y1", parseInt(Number(lineToDrag.getAttribute("y1"))));
				finL.setAttribute("x2", fALx2 + parseInt(Number(lineToDrag.getAttribute("x2"))) - x22);
				finL.setAttribute("y2", fALy2 + parseInt(Number(lineToDrag.getAttribute("y2"))) - y22);
				td1[0].innerHTML = parseInt(Number(finL.getAttribute("x1"))) + offset_SVG.left;
				td1[1].innerHTML = parseInt(Number(finL.getAttribute("y1"))) + offset_SVG.top;
				td1[2].innerHTML = parseInt(Number(finL.getAttribute("x2"))) + offset_SVG.left;
				td1[3].innerHTML = parseInt(Number(finL.getAttribute("y2"))) + offset_SVG.top;
			}
			else if(fALx1 == x22){
				finL.setAttribute("x1", parseInt(Number(lineToDrag.getAttribute("x2"))));
				finL.setAttribute("y1", parseInt(Number(lineToDrag.getAttribute("y2"))));
				finL.setAttribute("x2", fALx2 + parseInt(Number(lineToDrag.getAttribute("x2"))) - x22);
				finL.setAttribute("y2", fALy2 + parseInt(Number(lineToDrag.getAttribute("y2"))) - y22);
				td1[0].innerHTML = parseInt(Number(finL.getAttribute("x1"))) + offset_SVG.left;
				td1[1].innerHTML = parseInt(Number(finL.getAttribute("y1"))) + offset_SVG.top;
				td1[2].innerHTML = parseInt(Number(finL.getAttribute("x2"))) + offset_SVG.left;
				td1[3].innerHTML = parseInt(Number(finL.getAttribute("y2"))) + offset_SVG.top;
			}					
		}
		else{
			var td1 = null;
			for(var u = 0; u < findTR.length; u++){
				var td = findTR[u].getElementsByTagName('td');
				if((parseInt(Number(finL.getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(finL.getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,""))) || (parseInt(Number(finL.getAttribute("x1"))+offset_SVG.left) == Number(td[0].innerHTML.replace(/\D+/g,"")) && parseInt(Number(finL.getAttribute("y1"))+offset_SVG.top) == Number(td[1].innerHTML.replace(/\D+/g,"")))){
					td1 = td;
					break;
				}
			}
			if(fALx2 == x22){
				finL.setAttribute("x1", fALx1 + parseInt(Number(lineToDrag.getAttribute("x1"))) - x11);
				finL.setAttribute("y1", fALy1 + parseInt(Number(lineToDrag.getAttribute("y1"))) - y11);
				finL.setAttribute("x2", parseInt(Number(lineToDrag.getAttribute("x2"))));
				finL.setAttribute("y2", parseInt(Number(lineToDrag.getAttribute("y2"))));
				td1[0].innerHTML = parseInt(Number(finL.getAttribute("x1"))) + offset_SVG.left;
				td1[1].innerHTML = parseInt(Number(finL.getAttribute("y1"))) + offset_SVG.top;
				td1[2].innerHTML = parseInt(Number(finL.getAttribute("x2"))) + offset_SVG.left;
				td1[3].innerHTML = parseInt(Number(finL.getAttribute("y2"))) + offset_SVG.top;
			}
			else if(fALx2 == x11){
				finL.setAttribute("x1", fALx1 + parseInt(Number(lineToDrag.getAttribute("x1"))) - x11);
				finL.setAttribute("y1", fALy1 + parseInt(Number(lineToDrag.getAttribute("y1"))) - y11);
				finL.setAttribute("x2", parseInt(Number(lineToDrag.getAttribute("x1"))));
				finL.setAttribute("y2", parseInt(Number(lineToDrag.getAttribute("y1"))));
				td1[0].innerHTML = parseInt(Number(finL.getAttribute("x1"))) + offset_SVG.left;
				td1[1].innerHTML = parseInt(Number(finL.getAttribute("y1"))) + offset_SVG.top;
				td1[2].innerHTML = parseInt(Number(finL.getAttribute("x2"))) + offset_SVG.left;
				td1[3].innerHTML = parseInt(Number(finL.getAttribute("y2"))) + offset_SVG.top;
			}
		}
	}*/

	function moveHandler(e){
		if(!e) e = window.event;
		moveLine(lineToDrag,e);

		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
	}

	function upHandler(e){
		if(!e) e = window.event;
		for(var i = 0; i < findedAllLines.length; i++){
			findedAllLines[i].setAttribute("ch", "0");
		}
		document.removeEventListener("mouseup", upHandler, true);
		document.removeEventListener("mousemove", moveHandler, true);

		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
	}
}
